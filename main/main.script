local world_scale = 0.01

function init(self)
  msg.post(".", "acquire_input_focus")

  if not fmod then
    label.set_text("#label", "Sorry! Your platform is not yet supported.")
    return
  end

  fmod.studio.system:load_bank_memory(resource.load("/banks/Master Bank.bank"), fmod.STUDIO_LOAD_BANK_NORMAL)
  fmod.studio.system:load_bank_memory(resource.load("/banks/Master Bank.strings.bank"), fmod.STUDIO_LOAD_BANK_NORMAL)
  fmod.studio.system:load_bank_memory(resource.load("/banks/Vehicles.bank"), fmod.STUDIO_LOAD_BANK_NORMAL)

  local event_description = fmod.studio.system:get_event("event:/Vehicles/Basic Engine")
  local event = event_description:create_instance()
  self.event = event

  local listener_attr = fmod._3D_ATTRIBUTES()
  self.listener_attr = listener_attr
  listener_attr.position = go.get_world_position("listener") * world_scale
  listener_attr.velocity = vmath.vector3(0.0)
  listener_attr.forward = vmath.vector3(0.0, 1.0, 0.0)
  listener_attr.up = vmath.vector3(0.0, 0.0, -1.0)
  fmod.studio.system:set_listener_attributes(0, listener_attr)

  local source_attr = fmod._3D_ATTRIBUTES()
  self.source_attr = source_attr
  source_attr.position = go.get_world_position("source") * world_scale
  source_attr.velocity = vmath.vector3(0.0)
  source_attr.forward = vmath.vector3(0.0, 1.0, 0.0)
  source_attr.up = vmath.vector3(0.0, 0.0, -1.0)
  event:set_3d_attributes(source_attr)

  event:set_parameter_by_name("RPM", 650.0, false)
  event:start()
end

local function update_attributes(attr, dt, new_position)
  local delta_pos = new_position - attr.position
  attr.position = new_position
  attr.velocity = delta_pos * (1.0 / dt)
end

function update(self, dt)
  if not fmod then return end

  local listener_pos = go.get_world_position("listener") * world_scale
  update_attributes(self.listener_attr, dt, listener_pos)
  fmod.studio.system:set_listener_attributes(0, self.listener_attr)

  local source_pos = go.get_world_position("source") * world_scale
  update_attributes(self.source_attr, dt, source_pos)
  self.event:set_3d_attributes(self.source_attr)
end

function on_input(self, action_id, action)
  if action_id == hash("click") then
    go.set_position(vmath.vector3(action.x, action.y, 0.0), "source")
  end
end
